{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# [W142] Jupyter Notebook Tutorial - Out of School Children Rate in Uganda"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Estimated Time: 90 Minutes\n",
    "\n",
    "Created by: Yidan Zhang\n",
    "\n",
    "\n",
    "Today we will be examining a dataset from The World Inequality Database on Education (WIDE) to explore the powerful influence of circumstances(such as wealth, gender, ethnicity and location) have on their opportunities for education and life. \n",
    "\n",
    "Please use this international datasets to begin to identify, through analysis and data visualizations who are the most marginalized children with regards to education in the country your group has chosen?\n",
    "\n",
    "This Notebook serves as an example and tutorial of some data visualization techniques, you will be completing a similiar Notebook for this week's assignmen to tell us about gender and inequality in the country you have selected. You may want to be in touch with your group members to each run different analyses that look at different markers of marginalization. \n",
    "\n",
    "*Some materials in this Notebook are adapted from other Data Science Courses at UC Berkeley"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Basics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This webpage is a Jupyter notebook. We have created this specific notebook so that you can run code in order to perform data analysis and answer questions. Cells are the boxes that you can populate with code or text. To edit a cell, double click it. In order to run a cell, click the cell and press Shift + Enter while the cell is selected or hit the â–¶| Run button in the toolbar at the top. \n",
    "\n",
    "Check the resources below before you move to the next section:\n",
    "1. [Working with Jupyter Notebooks](https://berkeley-data.gitbook.io/curriculum-guide/workflow-basics/creating-notebooks) \n",
    "2. [Markdown Basics](https://datahub.berkeley.edu/user/yidan.zhang/notebooks/connector-instructors/examples/external_notebooks/markdown_basics.ipynb)\n",
    "\n",
    "Python is the programming language that we will use in this lab. Although this lab will go over some basics, should you be more interested in learning Python feel free to check out the following resources:\n",
    "\n",
    "1. [Python Tutorial](https://docs.python.org/3.5/tutorial/): Introduction to Python from the creators of Python\n",
    "2. [Composing Programs](http://composingprograms.com/pages/11-getting-started.html): An introduction to programming with Python from CS 61A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook, we will go over simple techniques in Python and Matplotlib that you can use to generate graphs that will help you in analyzing the ESG!\n",
    "\n",
    "\n",
    "First on our agenda is to import **<font color = ##008700>dependencies</font>** -- or packages in Python that add to the basic functions in Python. Kind of like accessorizing! For example, `matplotlib` allows us to generate the graphs we will be using.\n",
    "\n",
    "The format is as follows: <code><font color = ##008700><b>from</b></font> (package) <font color = ##008700><b>import</b></font> (stuff)</code>, where the \"stuff\" we're importing can range from a specific function in that package to a whole library of functions, as is the case when we type <code><font color = ##008700><b>import</b></font> (package) <font color = ##008700><b>as</b></font> (name)</code>."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Just run this cell\n",
    "\n",
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import numpy as np\n",
    "from datascience import *\n",
    "import matplotlib.pyplot as plots\n",
    "import math as m\n",
    "import qgrid as q\n",
    "import pandas as pd\n",
    "import sys\n",
    "sys.path.insert(0, \"development\")\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "from IPython.display import HTML"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <font color = #254117> Section 1: Math in Python </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**<font color = #254117>Mathematical Expressions</font>**\n",
    "In Python, we can carry out all the mathematical processes you know and love:\n",
    "\n",
    "* Add using `+`\n",
    "* Subtract using `-`\n",
    "* Multiply using `*`\n",
    "* Divide using `/`\n",
    "* Exponentiate using `**`\n",
    "* Floor divide using `//`\n",
    "* Take the remainder / modulo using `%`\n",
    "\n",
    "The most of these you should be familiar with, but let's go over some of the more obscure processes while beginning to implement some python code!\n",
    "\n",
    "To run the code in the following cells, press Shift + Enter/Return!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# So what exactly does floor divide do?\n",
    "17 // 3\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What about modulo?\n",
    "10 % 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Very cool! Now we'll let you try, and notice that we can use parentheses to organize our order of operations.\n",
    "\n",
    "**<font color = ##008700>Exercise</font>**:: Take the product of 5 and 3 to the power of 6 and then subtract 168."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Double click this cell, and replace the dots with your code: \n",
    "..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Awesome job! Feel free to add more cells using the + button in the upper left hand corner of the lab and play around with more mathematical expressions later! In the meantime, let's move on to the next section."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <font color = #254117>Section 2: Variables</font>\n",
    "\n",
    "As you might recall, a name that is used to denote a value is called a variable. In python, variables can be declared and values can be assigned. Here are a few examples of variables and their assignment:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After you download the WIDE dataset from their website, save it as a .CSV file and use the following code to open your dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = 2\n",
    "m = 3\n",
    "b = 4\n",
    "y = m*x + b\n",
    "# Look familiar? Press shift + enter to see the value!\n",
    "y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**<font color = #254117>Output and Printing</font>**\n",
    "\n",
    "As you might have noticed at the end, there is a difference between returning and printing:\n",
    "\n",
    "* **Return**: A value that is not necessarily printed, but is stored away inside a computer if we assign or bind it to a name.\n",
    "* **Printing**: A value that pops up on our screen.\n",
    "We print using a **print** function and return a value using the **return** function.\n",
    "\n",
    "**<font color = #254117>Functions?</font>**\n",
    "\n",
    "You might recall that a function receives input and correspondingly will output something. In Python, we have numerous functions, such as:\n",
    "\n",
    "* `print`: The command `print('hi')` will print 'hi' out to the screen.\n",
    "* `sum`: The command `sum(2,3,4)` will sum up the values enclosed in the parentheses and return the value.\n",
    "* And more!\n",
    "\n",
    "The best thing about functions is that, in Python, we can make our own functions! You can learn about this more in depth in other courses, but for now just remember that to call a function, we write the name of the function, like `print()` and we place our <font color = ##008700>arguments</font> inside the parentheses. \n",
    "\n",
    "Let's try it for ourselves!\n",
    "\n",
    "**<font color = ##008700>Exercise</font>**: Try printing out the phrase 'Hello World!'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Double click this cell, and replace the dots with your code: \n",
    "..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <font color = #254117>Section 3: Data Structures</font>\n",
    "\n",
    "So now that we know how to calculate things and use functions to do so, how can we organize large amounts of information?\n",
    "\n",
    "The solution to our problem is a data structure! A data structures is simply a means by which to contain and organize our data or information. They include:\n",
    "* **<font color = ##008700>List</font>**: A list holds an ordered collection of items similar to a grocery list.\n",
    "* **<font color = ##008700>Dictionary</font>**: Like an addressbook in which keys are associated with values (similar to names and phone numbers in addressbooks).\n",
    "* **<font color = ##008700>Set</font>**: An unordered collection of items, and they operate similar to how Venn Diagrams do.\n",
    "\n",
    "Here is how we can use lists:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['US', 'Chile', 'Uganda', 'Japan']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Creating a list using brackets and commas in between:\n",
    "countries = ['US', 'Chile', 'Uganda', 'Japan']\n",
    "countries"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**<font color = ##008700>Exercise</font>**: Now you try creating a list with the names of your goupmates!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create your list below:\n",
    "..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As opposed to a list (or array), a dictionary contains **<font color = ##008700>keys</font>** and **<font color = ##008700>values</font>** that, when defined, are separated by a colon. Take a look at the example below:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating a dictionary\n",
    "dictionary = {'US': 'North America', 'Chile': 'South America', 'Uganda': 'Africa', 'Japan': 'Asia'}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To call a certain value in a dictionary, we used the corresponding key:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'North America'"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dictionary[\"US\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Calling an index won't work here! Feel free to play around with the dictionary or create your own. One thing to note is that in a given dictionary, the keys must be unique, but values do not have to be.\n",
    "\n",
    "In addition to the data structures listed above, we can also organize our information in a table. Similar to Google Sheets or Microsoft Excel, we will be organzing our data into nice-looking tables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <font color = #254117>Section 4: Tables</font>\n",
    "In this section, we'll cover some basic table functions. In order to begin filtering through information stored in a table, we'll have to \"read in\" the information. Most of the time, information to be displayed as a table is stored as a `.csv` file which stands for **<font color = ##008700>comma separated values</font>**.\n",
    "\n",
    "To read in a file, we use the following command:\n",
    "\n",
    "`Table.read_table('file_name.csv')`\n",
    "\n",
    "and in order to store it, we'll assign it a name or label. We'll begin by reading in the file that you'll be using for the remainder of the lab:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Just run this code block! This code reads in our data.\n",
    "import pandas as pd\n",
    "wide = pd.read_csv('WIDE.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**<font color = #254117>Table Manipulations</font>**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>region_group</th>\n",
       "      <th>income_group</th>\n",
       "      <th>country</th>\n",
       "      <th>survey</th>\n",
       "      <th>year</th>\n",
       "      <th>level</th>\n",
       "      <th>grade</th>\n",
       "      <th>category</th>\n",
       "      <th>Sex</th>\n",
       "      <th>...</th>\n",
       "      <th>rlevel3_m</th>\n",
       "      <th>rlevel3_no</th>\n",
       "      <th>slevel3_m</th>\n",
       "      <th>slevel3_no</th>\n",
       "      <th>mlevel4_m</th>\n",
       "      <th>mlevel4_no</th>\n",
       "      <th>rlevel4_m</th>\n",
       "      <th>rlevel4_no</th>\n",
       "      <th>slevel4_m</th>\n",
       "      <th>slevel4_no</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 89 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  iso_code               region_group          income_group      country  \\\n",
       "0      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "1      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "2      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "\n",
       "  survey    year level  grade   category  Sex     ...     rlevel3_m  \\\n",
       "0    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "1    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "2    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "\n",
       "  rlevel3_no slevel3_m slevel3_no mlevel4_m mlevel4_no  rlevel4_m  rlevel4_no  \\\n",
       "0        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "1        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "2        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "\n",
       "   slevel4_m  slevel4_no  \n",
       "0        NaN         NaN  \n",
       "1        NaN         NaN  \n",
       "2        NaN         NaN  \n",
       "\n",
       "[3 rows x 89 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#lets look at the first 3 rows of our dataset\n",
    "wide.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`yourdata.loc[]` is a function that helps us select certain rows, columns, or a combination of rows and columns from a larger dataset. The following are some examples of how it can be used. Make sure to substitute `yourdata` in the function with the name of your dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>region_group</th>\n",
       "      <th>income_group</th>\n",
       "      <th>country</th>\n",
       "      <th>survey</th>\n",
       "      <th>year</th>\n",
       "      <th>level</th>\n",
       "      <th>grade</th>\n",
       "      <th>category</th>\n",
       "      <th>Sex</th>\n",
       "      <th>...</th>\n",
       "      <th>rlevel3_m</th>\n",
       "      <th>rlevel3_no</th>\n",
       "      <th>slevel3_m</th>\n",
       "      <th>slevel3_no</th>\n",
       "      <th>mlevel4_m</th>\n",
       "      <th>mlevel4_no</th>\n",
       "      <th>rlevel4_m</th>\n",
       "      <th>rlevel4_no</th>\n",
       "      <th>slevel4_m</th>\n",
       "      <th>slevel4_no</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 89 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  iso_code               region_group          income_group      country  \\\n",
       "0      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "1      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "2      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "\n",
       "  survey    year level  grade   category  Sex     ...     rlevel3_m  \\\n",
       "0    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "1    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "2    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "\n",
       "  rlevel3_no slevel3_m slevel3_no mlevel4_m mlevel4_no  rlevel4_m  rlevel4_no  \\\n",
       "0        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "1        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "2        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "\n",
       "   slevel4_m  slevel4_no  \n",
       "0        NaN         NaN  \n",
       "1        NaN         NaN  \n",
       "2        NaN         NaN  \n",
       "\n",
       "[3 rows x 89 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting the same disply as wide.head(3) with a different method\n",
    "wide.loc[[0,1,2],:] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>region_group</th>\n",
       "      <th>income_group</th>\n",
       "      <th>country</th>\n",
       "      <th>survey</th>\n",
       "      <th>year</th>\n",
       "      <th>level</th>\n",
       "      <th>grade</th>\n",
       "      <th>category</th>\n",
       "      <th>Sex</th>\n",
       "      <th>...</th>\n",
       "      <th>rlevel3_m</th>\n",
       "      <th>rlevel3_no</th>\n",
       "      <th>slevel3_m</th>\n",
       "      <th>slevel3_no</th>\n",
       "      <th>mlevel4_m</th>\n",
       "      <th>mlevel4_no</th>\n",
       "      <th>rlevel4_m</th>\n",
       "      <th>rlevel4_no</th>\n",
       "      <th>slevel4_m</th>\n",
       "      <th>slevel4_no</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Central and Southern Asia</td>\n",
       "      <td>Low income countries</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>DHS</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ethnicity</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 89 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  iso_code               region_group          income_group      country  \\\n",
       "0      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "1      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "2      AFG  Central and Southern Asia  Low income countries  Afghanistan   \n",
       "\n",
       "  survey    year level  grade   category  Sex     ...     rlevel3_m  \\\n",
       "0    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "1    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "2    DHS  2015.0   NaN    NaN  Ethnicity  NaN     ...           NaN   \n",
       "\n",
       "  rlevel3_no slevel3_m slevel3_no mlevel4_m mlevel4_no  rlevel4_m  rlevel4_no  \\\n",
       "0        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "1        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "2        NaN       NaN        NaN       NaN        NaN        NaN         NaN   \n",
       "\n",
       "   slevel4_m  slevel4_no  \n",
       "0        NaN         NaN  \n",
       "1        NaN         NaN  \n",
       "2        NaN         NaN  \n",
       "\n",
       "[3 rows x 89 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Since we want a range of rows, we could also use the following:\n",
    "wide.loc[0:2,:] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         Afghanistan\n",
       "1         Afghanistan\n",
       "2         Afghanistan\n",
       "3         Afghanistan\n",
       "4         Afghanistan\n",
       "5         Afghanistan\n",
       "6         Afghanistan\n",
       "7         Afghanistan\n",
       "8         Afghanistan\n",
       "9         Afghanistan\n",
       "10        Afghanistan\n",
       "11        Afghanistan\n",
       "12        Afghanistan\n",
       "13        Afghanistan\n",
       "14        Afghanistan\n",
       "15        Afghanistan\n",
       "16        Afghanistan\n",
       "17        Afghanistan\n",
       "18        Afghanistan\n",
       "19        Afghanistan\n",
       "20        Afghanistan\n",
       "21        Afghanistan\n",
       "22        Afghanistan\n",
       "23        Afghanistan\n",
       "24        Afghanistan\n",
       "25        Afghanistan\n",
       "26        Afghanistan\n",
       "27        Afghanistan\n",
       "28        Afghanistan\n",
       "29        Afghanistan\n",
       "             ...     \n",
       "146641            NaN\n",
       "146642            NaN\n",
       "146643            NaN\n",
       "146644            NaN\n",
       "146645            NaN\n",
       "146646            NaN\n",
       "146647            NaN\n",
       "146648            NaN\n",
       "146649            NaN\n",
       "146650            NaN\n",
       "146651            NaN\n",
       "146652            NaN\n",
       "146653            NaN\n",
       "146654            NaN\n",
       "146655            NaN\n",
       "146656            NaN\n",
       "146657            NaN\n",
       "146658            NaN\n",
       "146659            NaN\n",
       "146660            NaN\n",
       "146661            NaN\n",
       "146662            NaN\n",
       "146663            NaN\n",
       "146664            NaN\n",
       "146665            NaN\n",
       "146666            NaN\n",
       "146667            NaN\n",
       "146668            NaN\n",
       "146669            NaN\n",
       "146670            NaN\n",
       "Name: country, Length: 146671, dtype: object"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Now lets try to select columns by column name. \n",
    "wide.loc[:, \"country\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Afghanistan', 'Angola', 'Albania', 'U. A. Emirates', 'Argentina',\n",
       "       'Armenia', 'Australia', 'Austria', 'Azerbaijan', 'Burundi',\n",
       "       'Belgium', 'Benin', 'Burkina Faso', 'Bangladesh', 'Bulgaria',\n",
       "       'Bahrain', 'Bosnia/Herzeg.', 'Belarus', 'Belize', 'Bolivia',\n",
       "       'Brazil', 'Barbados', 'Bhutan', 'Botswana', 'C. A. R.', 'Canada',\n",
       "       'Switzerland', 'Chile', 'China', \"CÃ´te d'Ivoire\", 'Cameroon',\n",
       "       'D. R. Congo', 'Congo', 'Colombia', 'Comoros', 'Costa Rica',\n",
       "       'Cuba', 'Cyprus', 'Czechia', 'Germany', 'Djibouti', 'Denmark',\n",
       "       'Dominican Rep.', 'Algeria', 'Ecuador', 'Egypt', 'Spain',\n",
       "       'Estonia', 'Ethiopia', 'Finland', 'France', 'Gabon',\n",
       "       'United Kingdom', 'Georgia', 'Ghana', 'Guinea', 'Gambia',\n",
       "       'Guinea-Bissau', 'Equat. Guinea', 'Greece', 'Guatemala', 'Guyana',\n",
       "       'Hong Kong, China', 'Honduras', 'Croatia', 'Haiti', 'Hungary',\n",
       "       'Indonesia', 'India', 'Ireland', 'Iran, Isl. Rep.', 'Iraq',\n",
       "       'Iceland', 'Israel', 'Italy', 'Jamaica', 'Jordan', 'Japan',\n",
       "       'Kazakhstan', 'Kenya', 'Kyrgyzstan', 'Cambodia', 'Rep. of Korea',\n",
       "       'Kuwait', 'Lao PDR', 'Lebanon', 'Liberia', 'Saint Lucia',\n",
       "       'Liechtenstein', 'Sri Lanka', 'Lesotho', 'Lithuania', 'Luxembourg',\n",
       "       'Latvia', 'Macao, China', 'Morocco', 'Rep. Moldova', 'Madagascar',\n",
       "       'Maldives', 'Mexico', 'TFYR Macedonia', 'Mali', 'Malta', 'Myanmar',\n",
       "       'Montenegro', 'Mongolia', 'Mozambique', 'Mauritania', 'Mauritius',\n",
       "       'Malawi', 'Malaysia', 'Namibia', 'Niger', 'Nigeria', 'Nicaragua',\n",
       "       'Netherlands', 'Norway', 'Nepal', 'New Zealand', 'Oman',\n",
       "       'Pakistan', 'Panama', 'Peru', 'Philippines', 'Poland', 'Portugal',\n",
       "       'Paraguay', 'Palestine', 'Qatar', 'Romania', 'Russian Fed.',\n",
       "       'Rwanda', 'Saudi Arabia', 'Sudan', 'Senegal', 'Singapore',\n",
       "       'Sierra Leone', 'El Salvador', 'Somalia', 'Serbia', 'South Sudan',\n",
       "       'S. Tome/Principe', 'Suriname', 'Slovakia', 'Slovenia', 'Sweden',\n",
       "       'Eswatini', 'Seychelles', 'Syrian A. R.', 'Chad', 'Togo',\n",
       "       'Thailand', 'Tajikistan', 'Turkmenistan', 'Timor-Leste',\n",
       "       'Trinidad/Tobago', 'Tunisia', 'Turkey', 'U. R. Tanzania', 'Uganda',\n",
       "       'Ukraine', 'Uruguay', 'United States', 'Uzbekistan',\n",
       "       'Venezuela, B. R.', 'Viet Nam', 'Vanuatu', 'Yemen', 'South Africa',\n",
       "       'Zambia', 'Zimbabwe', nan], dtype=object)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## We can print the list of countries included in this dataset by asking for unique values or the country column\n",
    "countrynames = wide[\"country\"].unique()\n",
    "countrynames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['iso_code', 'region_group', 'income_group', 'country', 'survey', 'year',\n",
       "       'level', 'grade', 'category', 'Sex', 'Location', 'Wealth', 'Region',\n",
       "       'Ethnicity', 'Religion', 'Language', 'comp_prim_v2_m',\n",
       "       'comp_lowsec_v2_m', 'comp_upsec_v2_m', 'comp_prim_1524_m',\n",
       "       'comp_lowsec_1524_m', 'comp_upsec_2029_m', 'eduyears_2024_m',\n",
       "       'edu2_2024_m', 'edu4_2024_m', 'eduout_prim_m', 'eduout_lowsec_m',\n",
       "       'eduout_upsec_m', 'comp_prim_v2_no', 'comp_lowsec_v2_no',\n",
       "       'comp_upsec_v2_no', 'comp_prim_1524_no', 'comp_lowsec_1524_no',\n",
       "       'comp_upsec_2029_no', 'eduyears_2024_no', 'edu2_2024_no',\n",
       "       'edu4_2024_no', 'eduout_prim_no', 'eduout_lowsec_no', 'eduout_upsec_no',\n",
       "       'preschool_3_m', 'preschool_3_no', 'preschool_1ybefore_m',\n",
       "       'preschool_1ybefore_no', 'edu0_prim_m', 'edu0_prim_no', 'trans_prim_m',\n",
       "       'trans_prim_no', 'trans_lowsec_m', 'trans_lowsec_no',\n",
       "       'comp_higher_2yrs_2529_m', 'comp_higher_2yrs_2529_no',\n",
       "       'comp_higher_4yrs_2529_m', 'comp_higher_4yrs_2529_no',\n",
       "       'comp_higher_4yrs_3034_m', 'comp_higher_4yrs_3034_no',\n",
       "       'attend_higher_1822_m', 'attend_higher_1822_no', 'overage2plus_m',\n",
       "       'overage2plus_no', 'literacy_1524_m', 'literacy_1524_no', 'mlevel1_m',\n",
       "       'mlevel1_no', 'mlevel1_sd', 'rlevel1_m', 'rlevel1_no', 'rlevel1_sd',\n",
       "       'slevel1_m', 'slevel1_no', 'slevel1_sd', 'mlevel2_m', 'mlevel2_no',\n",
       "       'rlevel2_m', 'rlevel2_no', 'slevel2_m', 'slevel2_no', 'mlevel3_m',\n",
       "       'mlevel3_no', 'rlevel3_m', 'rlevel3_no', 'slevel3_m', 'slevel3_no',\n",
       "       'mlevel4_m', 'mlevel4_no', 'rlevel4_m', 'rlevel4_no', 'slevel4_m',\n",
       "       'slevel4_no'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#print all column names:\n",
    "wide.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>survey</th>\n",
       "      <th>year</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Wealth</th>\n",
       "      <th>Location</th>\n",
       "      <th>eduout_prim_m</th>\n",
       "      <th>eduout_lowsec_m</th>\n",
       "      <th>eduout_upsec_m</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>137019</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1257</td>\n",
       "      <td>0.1980</td>\n",
       "      <td>0.6219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137020</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0996</td>\n",
       "      <td>0.2283</td>\n",
       "      <td>0.5218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137021</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1678</td>\n",
       "      <td>0.2804</td>\n",
       "      <td>0.6582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137022</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>0.1725</td>\n",
       "      <td>0.8170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137023</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1177</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137024</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1276</td>\n",
       "      <td>0.2016</td>\n",
       "      <td>0.5468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137025</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0892</td>\n",
       "      <td>0.1498</td>\n",
       "      <td>0.6539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137026</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0832</td>\n",
       "      <td>0.3930</td>\n",
       "      <td>0.7047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137027</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.1081</td>\n",
       "      <td>0.2234</td>\n",
       "      <td>0.4325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137028</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1217</td>\n",
       "      <td>0.2549</td>\n",
       "      <td>0.7295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137029</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.1101</td>\n",
       "      <td>0.2681</td>\n",
       "      <td>0.6057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137030</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1299</td>\n",
       "      <td>0.1470</td>\n",
       "      <td>0.4846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137031</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0875</td>\n",
       "      <td>0.1767</td>\n",
       "      <td>0.4095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137032</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1265</td>\n",
       "      <td>0.2346</td>\n",
       "      <td>0.6266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137033</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0681</td>\n",
       "      <td>0.1403</td>\n",
       "      <td>0.5760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137034</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.2031</td>\n",
       "      <td>0.2424</td>\n",
       "      <td>0.5728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137035</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1305</td>\n",
       "      <td>0.1942</td>\n",
       "      <td>0.6121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137036</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1592</td>\n",
       "      <td>0.2585</td>\n",
       "      <td>0.6574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137037</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0926</td>\n",
       "      <td>0.2300</td>\n",
       "      <td>0.7879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137038</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1175</td>\n",
       "      <td>0.0648</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137039</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1254</td>\n",
       "      <td>0.2047</td>\n",
       "      <td>0.5264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137040</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1203</td>\n",
       "      <td>0.2574</td>\n",
       "      <td>0.7061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137041</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1252</td>\n",
       "      <td>0.1510</td>\n",
       "      <td>0.4709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137042</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1212</td>\n",
       "      <td>0.2408</td>\n",
       "      <td>0.6823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137043</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0708</td>\n",
       "      <td>0.2158</td>\n",
       "      <td>0.7198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137044</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.2175</td>\n",
       "      <td>0.3752</td>\n",
       "      <td>0.7489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137045</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1155</td>\n",
       "      <td>0.2433</td>\n",
       "      <td>0.7052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137046</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1320</td>\n",
       "      <td>0.2286</td>\n",
       "      <td>0.5450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137047</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0651</td>\n",
       "      <td>0.0634</td>\n",
       "      <td>0.3879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137048</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.1871</td>\n",
       "      <td>0.1168</td>\n",
       "      <td>0.3585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138463</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138464</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138465</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138466</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138467</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138468</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138469</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138470</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138471</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138472</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138473</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138474</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138475</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138476</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138477</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138478</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138479</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138480</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138481</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138482</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138483</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138484</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138485</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138486</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138487</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138488</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138489</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138490</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138491</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138492</th>\n",
       "      <td>UWEZO</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1474 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       survey    year     Sex      Wealth Location  eduout_prim_m  \\\n",
       "137019    DHS  2001.0     NaN         NaN    Rural         0.1257   \n",
       "137020    DHS  2001.0     NaN         NaN    Urban         0.0996   \n",
       "137021    DHS  2001.0     NaN         NaN    Rural         0.1678   \n",
       "137022    DHS  2001.0     NaN         NaN    Rural         0.0952   \n",
       "137023    DHS  2001.0     NaN         NaN    Rural         0.1177   \n",
       "137024    DHS  2001.0     NaN         NaN    Rural         0.1276   \n",
       "137025    DHS  2001.0     NaN         NaN    Urban         0.0892   \n",
       "137026    DHS  2001.0     NaN         NaN    Urban         0.0832   \n",
       "137027    DHS  2001.0     NaN         NaN    Urban         0.1081   \n",
       "137028    DHS  2001.0  Female         NaN    Rural         0.1217   \n",
       "137029    DHS  2001.0  Female         NaN    Urban         0.1101   \n",
       "137030    DHS  2001.0    Male         NaN    Rural         0.1299   \n",
       "137031    DHS  2001.0    Male         NaN    Urban         0.0875   \n",
       "137032    DHS  2001.0     NaN         NaN      NaN         0.1265   \n",
       "137033    DHS  2001.0     NaN         NaN      NaN         0.0681   \n",
       "137034    DHS  2001.0     NaN         NaN      NaN         0.2031   \n",
       "137035    DHS  2001.0     NaN         NaN      NaN         0.1305   \n",
       "137036    DHS  2001.0     NaN         NaN      NaN         0.1592   \n",
       "137037    DHS  2001.0     NaN         NaN      NaN         0.0926   \n",
       "137038    DHS  2001.0     NaN         NaN      NaN         0.1175   \n",
       "137039    DHS  2001.0     NaN         NaN      NaN         0.1254   \n",
       "137040    DHS  2001.0  Female         NaN      NaN         0.1203   \n",
       "137041    DHS  2001.0    Male         NaN      NaN         0.1252   \n",
       "137042    DHS  2001.0  Female         NaN      NaN         0.1212   \n",
       "137043    DHS  2001.0  Female         NaN      NaN         0.0708   \n",
       "137044    DHS  2001.0  Female         NaN      NaN         0.2175   \n",
       "137045    DHS  2001.0  Female         NaN      NaN         0.1155   \n",
       "137046    DHS  2001.0    Male         NaN      NaN         0.1320   \n",
       "137047    DHS  2001.0    Male         NaN      NaN         0.0651   \n",
       "137048    DHS  2001.0    Male         NaN      NaN         0.1871   \n",
       "...       ...     ...     ...         ...      ...            ...   \n",
       "138463  UWEZO  2014.0    Male  Quintile 4      NaN            NaN   \n",
       "138464  UWEZO  2014.0    Male  Quintile 4      NaN            NaN   \n",
       "138465  UWEZO  2014.0    Male  Quintile 4      NaN            NaN   \n",
       "138466  UWEZO  2014.0    Male  Quintile 5      NaN            NaN   \n",
       "138467  UWEZO  2014.0    Male  Quintile 5      NaN            NaN   \n",
       "138468  UWEZO  2014.0    Male  Quintile 5      NaN            NaN   \n",
       "138469  UWEZO  2014.0     NaN  Quintile 1      NaN            NaN   \n",
       "138470  UWEZO  2014.0     NaN  Quintile 2      NaN            NaN   \n",
       "138471  UWEZO  2014.0     NaN  Quintile 3      NaN            NaN   \n",
       "138472  UWEZO  2014.0     NaN  Quintile 4      NaN            NaN   \n",
       "138473  UWEZO  2014.0     NaN  Quintile 5      NaN            NaN   \n",
       "138474  UWEZO  2014.0     NaN  Quintile 1      NaN            NaN   \n",
       "138475  UWEZO  2014.0     NaN  Quintile 1      NaN            NaN   \n",
       "138476  UWEZO  2014.0     NaN  Quintile 1      NaN            NaN   \n",
       "138477  UWEZO  2014.0     NaN  Quintile 2      NaN            NaN   \n",
       "138478  UWEZO  2014.0     NaN  Quintile 2      NaN            NaN   \n",
       "138479  UWEZO  2014.0     NaN  Quintile 2      NaN            NaN   \n",
       "138480  UWEZO  2014.0     NaN  Quintile 2      NaN            NaN   \n",
       "138481  UWEZO  2014.0     NaN  Quintile 3      NaN            NaN   \n",
       "138482  UWEZO  2014.0     NaN  Quintile 3      NaN            NaN   \n",
       "138483  UWEZO  2014.0     NaN  Quintile 3      NaN            NaN   \n",
       "138484  UWEZO  2014.0     NaN  Quintile 3      NaN            NaN   \n",
       "138485  UWEZO  2014.0     NaN  Quintile 4      NaN            NaN   \n",
       "138486  UWEZO  2014.0     NaN  Quintile 4      NaN            NaN   \n",
       "138487  UWEZO  2014.0     NaN  Quintile 4      NaN            NaN   \n",
       "138488  UWEZO  2014.0     NaN  Quintile 4      NaN            NaN   \n",
       "138489  UWEZO  2014.0     NaN  Quintile 5      NaN            NaN   \n",
       "138490  UWEZO  2014.0     NaN  Quintile 5      NaN            NaN   \n",
       "138491  UWEZO  2014.0     NaN  Quintile 5      NaN            NaN   \n",
       "138492  UWEZO  2014.0     NaN  Quintile 5      NaN            NaN   \n",
       "\n",
       "        eduout_lowsec_m  eduout_upsec_m  \n",
       "137019           0.1980          0.6219  \n",
       "137020           0.2283          0.5218  \n",
       "137021           0.2804          0.6582  \n",
       "137022           0.1725          0.8170  \n",
       "137023              NaN             NaN  \n",
       "137024           0.2016          0.5468  \n",
       "137025           0.1498          0.6539  \n",
       "137026           0.3930          0.7047  \n",
       "137027           0.2234          0.4325  \n",
       "137028           0.2549          0.7295  \n",
       "137029           0.2681          0.6057  \n",
       "137030           0.1470          0.4846  \n",
       "137031           0.1767          0.4095  \n",
       "137032           0.2346          0.6266  \n",
       "137033           0.1403          0.5760  \n",
       "137034           0.2424          0.5728  \n",
       "137035           0.1942          0.6121  \n",
       "137036           0.2585          0.6574  \n",
       "137037           0.2300          0.7879  \n",
       "137038           0.0648             NaN  \n",
       "137039           0.2047          0.5264  \n",
       "137040           0.2574          0.7061  \n",
       "137041           0.1510          0.4709  \n",
       "137042           0.2408          0.6823  \n",
       "137043           0.2158          0.7198  \n",
       "137044           0.3752          0.7489  \n",
       "137045           0.2433          0.7052  \n",
       "137046           0.2286          0.5450  \n",
       "137047           0.0634          0.3879  \n",
       "137048           0.1168          0.3585  \n",
       "...                 ...             ...  \n",
       "138463              NaN             NaN  \n",
       "138464              NaN             NaN  \n",
       "138465              NaN             NaN  \n",
       "138466              NaN             NaN  \n",
       "138467              NaN             NaN  \n",
       "138468              NaN             NaN  \n",
       "138469              NaN             NaN  \n",
       "138470              NaN             NaN  \n",
       "138471              NaN             NaN  \n",
       "138472              NaN             NaN  \n",
       "138473              NaN             NaN  \n",
       "138474              NaN             NaN  \n",
       "138475              NaN             NaN  \n",
       "138476              NaN             NaN  \n",
       "138477              NaN             NaN  \n",
       "138478              NaN             NaN  \n",
       "138479              NaN             NaN  \n",
       "138480              NaN             NaN  \n",
       "138481              NaN             NaN  \n",
       "138482              NaN             NaN  \n",
       "138483              NaN             NaN  \n",
       "138484              NaN             NaN  \n",
       "138485              NaN             NaN  \n",
       "138486              NaN             NaN  \n",
       "138487              NaN             NaN  \n",
       "138488              NaN             NaN  \n",
       "138489              NaN             NaN  \n",
       "138490              NaN             NaN  \n",
       "138491              NaN             NaN  \n",
       "138492              NaN             NaN  \n",
       "\n",
       "[1474 rows x 8 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Now lets select our country of interest, and only display variables we are interested in\n",
    "uganda = wide.loc[wide.country =='Uganda',['survey','year','Sex','Wealth','Location','eduout_prim_m','eduout_lowsec_m',\n",
    "       'eduout_upsec_m']]\n",
    "uganda"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You might have noticed the \"NaN\" entries in the table. NaN actually stands for \"Not a Number\", however, conceptualy, NaN means missing value. Now that we have selected our valuables, and narrowed down on the country, we need to handle the missing data before we do any other analysis or visualization. \n",
    "\n",
    "There are several different ways to handle missing data, but we will only demonstrate how to delete these values here. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "survey                0\n",
       "year                  0\n",
       "Sex                 558\n",
       "Wealth              399\n",
       "Location           1227\n",
       "eduout_prim_m       861\n",
       "eduout_lowsec_m     962\n",
       "eduout_upsec_m     1128\n",
       "dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get number of missing values in each column\n",
    "uganda.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1474, 8)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#First lets check the shape of our dataframe\n",
    "uganda.shape "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This means we currently have 1474 rows and 8 columns in the dataframe for Uganda. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(41, 8)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#drop all rows that contains a missing value\n",
    "uganda.dropna(how ='any').shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that after deleting the missing values, we have only 41 rows left. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>survey</th>\n",
       "      <th>year</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Wealth</th>\n",
       "      <th>Location</th>\n",
       "      <th>eduout_prim_m</th>\n",
       "      <th>eduout_lowsec_m</th>\n",
       "      <th>eduout_upsec_m</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>137075</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.2862</td>\n",
       "      <td>0.2925</td>\n",
       "      <td>0.7342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137076</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.2143</td>\n",
       "      <td>0.1740</td>\n",
       "      <td>0.6584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137077</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1816</td>\n",
       "      <td>0.1570</td>\n",
       "      <td>0.5785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137078</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1305</td>\n",
       "      <td>0.0696</td>\n",
       "      <td>0.5618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137079</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1080</td>\n",
       "      <td>0.1227</td>\n",
       "      <td>0.3847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137081</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0861</td>\n",
       "      <td>0.1911</td>\n",
       "      <td>0.4619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137082</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.2638</td>\n",
       "      <td>0.1864</td>\n",
       "      <td>0.4920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137083</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1750</td>\n",
       "      <td>0.1613</td>\n",
       "      <td>0.4254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137084</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1742</td>\n",
       "      <td>0.1525</td>\n",
       "      <td>0.4958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137085</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1425</td>\n",
       "      <td>0.1470</td>\n",
       "      <td>0.4254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137086</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1236</td>\n",
       "      <td>0.0887</td>\n",
       "      <td>0.3317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137090</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0692</td>\n",
       "      <td>0.0789</td>\n",
       "      <td>0.3931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137340</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.2142</td>\n",
       "      <td>0.3171</td>\n",
       "      <td>0.8401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137341</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1128</td>\n",
       "      <td>0.1372</td>\n",
       "      <td>0.7751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137342</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0853</td>\n",
       "      <td>0.1849</td>\n",
       "      <td>0.6904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137343</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0706</td>\n",
       "      <td>0.1233</td>\n",
       "      <td>0.6010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137344</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0497</td>\n",
       "      <td>0.1247</td>\n",
       "      <td>0.5050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137348</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0443</td>\n",
       "      <td>0.0898</td>\n",
       "      <td>0.7460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137349</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0826</td>\n",
       "      <td>0.3420</td>\n",
       "      <td>0.6810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137350</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1673</td>\n",
       "      <td>0.1963</td>\n",
       "      <td>0.5494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137351</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1302</td>\n",
       "      <td>0.1436</td>\n",
       "      <td>0.4997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137352</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1045</td>\n",
       "      <td>0.1197</td>\n",
       "      <td>0.5417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137353</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0859</td>\n",
       "      <td>0.1358</td>\n",
       "      <td>0.3907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137354</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0665</td>\n",
       "      <td>0.2009</td>\n",
       "      <td>0.4255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137358</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.1103</td>\n",
       "      <td>0.0869</td>\n",
       "      <td>0.3889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137359</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0577</td>\n",
       "      <td>0.1881</td>\n",
       "      <td>0.4160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137592</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.2264</td>\n",
       "      <td>0.3537</td>\n",
       "      <td>0.8646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137593</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1237</td>\n",
       "      <td>0.2613</td>\n",
       "      <td>0.7997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137594</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1116</td>\n",
       "      <td>0.2455</td>\n",
       "      <td>0.6909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137595</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0956</td>\n",
       "      <td>0.1990</td>\n",
       "      <td>0.6450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137596</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0470</td>\n",
       "      <td>0.2939</td>\n",
       "      <td>0.6091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137600</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0659</td>\n",
       "      <td>0.2309</td>\n",
       "      <td>0.7867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137601</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0671</td>\n",
       "      <td>0.3597</td>\n",
       "      <td>0.6535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137602</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1871</td>\n",
       "      <td>0.2902</td>\n",
       "      <td>0.6559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137603</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1463</td>\n",
       "      <td>0.2472</td>\n",
       "      <td>0.5985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137604</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1136</td>\n",
       "      <td>0.2507</td>\n",
       "      <td>0.5385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137605</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1182</td>\n",
       "      <td>0.2529</td>\n",
       "      <td>0.5614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137606</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0834</td>\n",
       "      <td>0.2243</td>\n",
       "      <td>0.5638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137607</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.2506</td>\n",
       "      <td>0.3464</td>\n",
       "      <td>0.6395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137610</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.1147</td>\n",
       "      <td>0.2267</td>\n",
       "      <td>0.5295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137611</th>\n",
       "      <td>DHS</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0714</td>\n",
       "      <td>0.2639</td>\n",
       "      <td>0.5322</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       survey    year     Sex      Wealth Location  eduout_prim_m  \\\n",
       "137075    DHS  2006.0  Female  Quintile 1    Rural         0.2862   \n",
       "137076    DHS  2006.0  Female  Quintile 2    Rural         0.2143   \n",
       "137077    DHS  2006.0  Female  Quintile 3    Rural         0.1816   \n",
       "137078    DHS  2006.0  Female  Quintile 4    Rural         0.1305   \n",
       "137079    DHS  2006.0  Female  Quintile 5    Rural         0.1080   \n",
       "137081    DHS  2006.0  Female  Quintile 5    Urban         0.0861   \n",
       "137082    DHS  2006.0    Male  Quintile 1    Rural         0.2638   \n",
       "137083    DHS  2006.0    Male  Quintile 2    Rural         0.1750   \n",
       "137084    DHS  2006.0    Male  Quintile 3    Rural         0.1742   \n",
       "137085    DHS  2006.0    Male  Quintile 4    Rural         0.1425   \n",
       "137086    DHS  2006.0    Male  Quintile 5    Rural         0.1236   \n",
       "137090    DHS  2006.0    Male  Quintile 5    Urban         0.0692   \n",
       "137340    DHS  2011.0  Female  Quintile 1    Rural         0.2142   \n",
       "137341    DHS  2011.0  Female  Quintile 2    Rural         0.1128   \n",
       "137342    DHS  2011.0  Female  Quintile 3    Rural         0.0853   \n",
       "137343    DHS  2011.0  Female  Quintile 4    Rural         0.0706   \n",
       "137344    DHS  2011.0  Female  Quintile 5    Rural         0.0497   \n",
       "137348    DHS  2011.0  Female  Quintile 4    Urban         0.0443   \n",
       "137349    DHS  2011.0  Female  Quintile 5    Urban         0.0826   \n",
       "137350    DHS  2011.0    Male  Quintile 1    Rural         0.1673   \n",
       "137351    DHS  2011.0    Male  Quintile 2    Rural         0.1302   \n",
       "137352    DHS  2011.0    Male  Quintile 3    Rural         0.1045   \n",
       "137353    DHS  2011.0    Male  Quintile 4    Rural         0.0859   \n",
       "137354    DHS  2011.0    Male  Quintile 5    Rural         0.0665   \n",
       "137358    DHS  2011.0    Male  Quintile 4    Urban         0.1103   \n",
       "137359    DHS  2011.0    Male  Quintile 5    Urban         0.0577   \n",
       "137592    DHS  2016.0  Female  Quintile 1    Rural         0.2264   \n",
       "137593    DHS  2016.0  Female  Quintile 2    Rural         0.1237   \n",
       "137594    DHS  2016.0  Female  Quintile 3    Rural         0.1116   \n",
       "137595    DHS  2016.0  Female  Quintile 4    Rural         0.0956   \n",
       "137596    DHS  2016.0  Female  Quintile 5    Rural         0.0470   \n",
       "137600    DHS  2016.0  Female  Quintile 4    Urban         0.0659   \n",
       "137601    DHS  2016.0  Female  Quintile 5    Urban         0.0671   \n",
       "137602    DHS  2016.0    Male  Quintile 1    Rural         0.1871   \n",
       "137603    DHS  2016.0    Male  Quintile 2    Rural         0.1463   \n",
       "137604    DHS  2016.0    Male  Quintile 3    Rural         0.1136   \n",
       "137605    DHS  2016.0    Male  Quintile 4    Rural         0.1182   \n",
       "137606    DHS  2016.0    Male  Quintile 5    Rural         0.0834   \n",
       "137607    DHS  2016.0    Male  Quintile 1    Urban         0.2506   \n",
       "137610    DHS  2016.0    Male  Quintile 4    Urban         0.1147   \n",
       "137611    DHS  2016.0    Male  Quintile 5    Urban         0.0714   \n",
       "\n",
       "        eduout_lowsec_m  eduout_upsec_m  \n",
       "137075           0.2925          0.7342  \n",
       "137076           0.1740          0.6584  \n",
       "137077           0.1570          0.5785  \n",
       "137078           0.0696          0.5618  \n",
       "137079           0.1227          0.3847  \n",
       "137081           0.1911          0.4619  \n",
       "137082           0.1864          0.4920  \n",
       "137083           0.1613          0.4254  \n",
       "137084           0.1525          0.4958  \n",
       "137085           0.1470          0.4254  \n",
       "137086           0.0887          0.3317  \n",
       "137090           0.0789          0.3931  \n",
       "137340           0.3171          0.8401  \n",
       "137341           0.1372          0.7751  \n",
       "137342           0.1849          0.6904  \n",
       "137343           0.1233          0.6010  \n",
       "137344           0.1247          0.5050  \n",
       "137348           0.0898          0.7460  \n",
       "137349           0.3420          0.6810  \n",
       "137350           0.1963          0.5494  \n",
       "137351           0.1436          0.4997  \n",
       "137352           0.1197          0.5417  \n",
       "137353           0.1358          0.3907  \n",
       "137354           0.2009          0.4255  \n",
       "137358           0.0869          0.3889  \n",
       "137359           0.1881          0.4160  \n",
       "137592           0.3537          0.8646  \n",
       "137593           0.2613          0.7997  \n",
       "137594           0.2455          0.6909  \n",
       "137595           0.1990          0.6450  \n",
       "137596           0.2939          0.6091  \n",
       "137600           0.2309          0.7867  \n",
       "137601           0.3597          0.6535  \n",
       "137602           0.2902          0.6559  \n",
       "137603           0.2472          0.5985  \n",
       "137604           0.2507          0.5385  \n",
       "137605           0.2529          0.5614  \n",
       "137606           0.2243          0.5638  \n",
       "137607           0.3464          0.6395  \n",
       "137610           0.2267          0.5295  \n",
       "137611           0.2639          0.5322  "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Since we are confindent that missing values are deleted, we assign this new dataframe a name and display it. \n",
    "uganda = uganda.dropna(how ='any')\n",
    "uganda"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For a more detailed tutorial on data selection and how to handle missing values, check out the following videos on YouTube:\n",
    "\n",
    "*[Data Selection](https://www.youtube.com/watch?v=xvpNA7bC8cs)\n",
    "\n",
    "*[Missing Values](https://www.youtube.com/watch?v=fCMrO_VzeL8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <center><font color = #254117>Congratulations! You've successfully selected the data you want to work with for this assignment!</font></center>\n",
    "\n",
    "<center>We will now move onto the application of these techniques. Make sure you understand the tables we created as we will be using these in the parts that follow.</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <font color = #254117>Section 5: Summary Statistics and Visualization </font>\n",
    "\n",
    "First lets explore some ways to look at the summary statistics by different groups within a column, using the groupby function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>eduout_prim_m</th>\n",
       "      <th>eduout_lowsec_m</th>\n",
       "      <th>eduout_upsec_m</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2006.0</th>\n",
       "      <td>0.162917</td>\n",
       "      <td>0.151808</td>\n",
       "      <td>0.495242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011.0</th>\n",
       "      <td>0.098707</td>\n",
       "      <td>0.170736</td>\n",
       "      <td>0.575036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016.0</th>\n",
       "      <td>0.121507</td>\n",
       "      <td>0.269753</td>\n",
       "      <td>0.644587</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        eduout_prim_m  eduout_lowsec_m  eduout_upsec_m\n",
       "year                                                  \n",
       "2006.0       0.162917         0.151808        0.495242\n",
       "2011.0       0.098707         0.170736        0.575036\n",
       "2016.0       0.121507         0.269753        0.644587"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# lets look at the over mean out of school children rate at each level for Uganda, by survey year \n",
    "uganda.groupby('year').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# We can also filter the data by year first, and then compute the mean. \n",
    "# This result should be the same as the lower right cell in the table above.\n",
    "uganda[uganda.year==2016].eduout_upsec_m.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now lets plot the information in the above table side by side in a bar chart."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "#this allows the plot to appear in the Notebook\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7ff5d5c186a0>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "uganda.groupby('year').mean().plot(kind='line')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <font color = #254117>Section 5: Application</font>\n",
    "\n",
    "Let's visualize the out of school children rate in Uganda with the most recent data (2016). More specifically, lets look at the difference in OOSC for different genders, location and wealth level to find out the most marginalized children with regards to access to education. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we have seen the trend of OOSC in Uganda over the past three survey year, let's narrow down to the most recent year and explore the differences in wealth and gender. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>survey</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Wealth</th>\n",
       "      <th>Location</th>\n",
       "      <th>eduout_prim_m</th>\n",
       "      <th>eduout_lowsec_m</th>\n",
       "      <th>eduout_upsec_m</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>137592</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.2264</td>\n",
       "      <td>0.3537</td>\n",
       "      <td>0.8646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137593</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1237</td>\n",
       "      <td>0.2613</td>\n",
       "      <td>0.7997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137594</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1116</td>\n",
       "      <td>0.2455</td>\n",
       "      <td>0.6909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137595</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0956</td>\n",
       "      <td>0.1990</td>\n",
       "      <td>0.6450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137596</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0470</td>\n",
       "      <td>0.2939</td>\n",
       "      <td>0.6091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137600</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0659</td>\n",
       "      <td>0.2309</td>\n",
       "      <td>0.7867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137601</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Female</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0671</td>\n",
       "      <td>0.3597</td>\n",
       "      <td>0.6535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137602</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1871</td>\n",
       "      <td>0.2902</td>\n",
       "      <td>0.6559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137603</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 2</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1463</td>\n",
       "      <td>0.2472</td>\n",
       "      <td>0.5985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137604</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 3</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1136</td>\n",
       "      <td>0.2507</td>\n",
       "      <td>0.5385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137605</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.1182</td>\n",
       "      <td>0.2529</td>\n",
       "      <td>0.5614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137606</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Rural</td>\n",
       "      <td>0.0834</td>\n",
       "      <td>0.2243</td>\n",
       "      <td>0.5638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137607</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 1</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.2506</td>\n",
       "      <td>0.3464</td>\n",
       "      <td>0.6395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137610</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 4</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.1147</td>\n",
       "      <td>0.2267</td>\n",
       "      <td>0.5295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137611</th>\n",
       "      <td>DHS</td>\n",
       "      <td>Male</td>\n",
       "      <td>Quintile 5</td>\n",
       "      <td>Urban</td>\n",
       "      <td>0.0714</td>\n",
       "      <td>0.2639</td>\n",
       "      <td>0.5322</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       survey     Sex      Wealth Location  eduout_prim_m  eduout_lowsec_m  \\\n",
       "137592    DHS  Female  Quintile 1    Rural         0.2264           0.3537   \n",
       "137593    DHS  Female  Quintile 2    Rural         0.1237           0.2613   \n",
       "137594    DHS  Female  Quintile 3    Rural         0.1116           0.2455   \n",
       "137595    DHS  Female  Quintile 4    Rural         0.0956           0.1990   \n",
       "137596    DHS  Female  Quintile 5    Rural         0.0470           0.2939   \n",
       "137600    DHS  Female  Quintile 4    Urban         0.0659           0.2309   \n",
       "137601    DHS  Female  Quintile 5    Urban         0.0671           0.3597   \n",
       "137602    DHS    Male  Quintile 1    Rural         0.1871           0.2902   \n",
       "137603    DHS    Male  Quintile 2    Rural         0.1463           0.2472   \n",
       "137604    DHS    Male  Quintile 3    Rural         0.1136           0.2507   \n",
       "137605    DHS    Male  Quintile 4    Rural         0.1182           0.2529   \n",
       "137606    DHS    Male  Quintile 5    Rural         0.0834           0.2243   \n",
       "137607    DHS    Male  Quintile 1    Urban         0.2506           0.3464   \n",
       "137610    DHS    Male  Quintile 4    Urban         0.1147           0.2267   \n",
       "137611    DHS    Male  Quintile 5    Urban         0.0714           0.2639   \n",
       "\n",
       "        eduout_upsec_m  \n",
       "137592          0.8646  \n",
       "137593          0.7997  \n",
       "137594          0.6909  \n",
       "137595          0.6450  \n",
       "137596          0.6091  \n",
       "137600          0.7867  \n",
       "137601          0.6535  \n",
       "137602          0.6559  \n",
       "137603          0.5985  \n",
       "137604          0.5385  \n",
       "137605          0.5614  \n",
       "137606          0.5638  \n",
       "137607          0.6395  \n",
       "137610          0.5295  \n",
       "137611          0.5322  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# First, select only Uganda data from 2016 \n",
    "uganda16 = uganda.loc[uganda.year == 2016,['survey','Sex','Wealth','Location','eduout_prim_m','eduout_lowsec_m',\n",
    "       'eduout_upsec_m']]\n",
    "uganda16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7ff5d57d2748>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "uganda16.groupby('Location').mean().plot(kind='bar').legend(bbox_to_anchor=(1, 0.5))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What if we want to see the difference of OOSC by location and gender? We could create subplots and compare the genders side by side. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Male')"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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qquuOr1m+8eOHTNJWrBgQc7s2bM/lqSsrCx17NixzjvM1Yy9LulLY69Pmzate7zPscWGOu/QASAxasZTnzFjxudfd37qqadOffHFF0+N1j7Z46nXlp2d7Xl5eUcffPDBTsXFxQcHDx585I033sjZtGlT9llnnfVZRkaGSktLV7700kvtH3744dznnnuuwyOPPLI5Jycn1Ni7yiV67PUW+5l6zTv0WB8AgOhSfTz1GiNHjjw4d+7cUw8cOJCxf//+jLlz5542cuTIA5I0bNiwgzNmzOgyYsSIAxdeeOGBJ554IreoqOhwRkaGtm3bllVZWakbbrjh03//93/fsnz58nYdOnSo6tmz57E//elPp0nV1wO89957bSXpvPPOO3DfffflSlIoFNLu3bvrPP2eaC32SB0AgqpHl46hRF6x3qNLx7QeT73G17/+9cPXXHPN7rPPPrt/eH87zzvvvCOSdP755x+YPn1611GjRh1q3759VXZ2tp933nkHJWnjxo2tJkyYUFBVVWWSNHXq1ApJeuaZZzbccsstve69995uoVDILr/88j3Dhg078tBDD22+4YYbevXp06dTRkaG/vCHP2y68MILD53Iax+vFjueupnFdQRuU/a36DGn4329pPhfM8ZTT45kjw+eTM3RryXGU0diNXo8dQAAkPo4/Q4ECBeAoiWrazz1mqvLk6U5x14n1IEA4StaaMmaczz1eDTn2OucfgcAICAIdQAAAoJQBwAgIAh1AAACggvlACBgcrvlDt61fVfC/r536toptHPbzrQdT70lIdQBIGB2bd+VFe8NcupTekNpymYF46l/EaffAQCNlsrjqddsX5Iee+yx08aNG1dQU8c111yTP3DgwP4FBQUDn3nmmVMkqaSkpE3Nc+nTp0/R8uXLs+t6jpI0e/bs9kVFRf379u1bNGzYsDrruPPOO7tfccUVBUOGDOnbvXv3QU888cSpt912W88+ffoUDR8+vDARA9UQ6gCARokcT72srGxlRkaG14ynvmDBgrJFixaVrVmzpm1D24kcT/3NN99cM3ny5J6bNm1qVVf7SZMmfdK5c+fj8+fPX9PQfd/rUl5enr106dJVr7766tof/ehHvQ4fPmwPPPBA7g9+8IMdZWVlK5ctW7aqd+/ex6I9x4cffrjj1q1bsyZOnFjw4osvrl+9evXKl19+ud7xzzdt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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## plotting  two subplots ax1 and ax2\n",
    "fig, (ax1,ax2) = plots.subplots(nrows = 1, ncols = 2,sharex=True, sharey=True)\n",
    "#use ax1 to plot girls\n",
    "uganda16[uganda16['Sex']=='Female'].groupby('Location').mean().plot(kind = 'bar', ax = ax1, legend = False)\n",
    "ax1.set_title(\"Female\")\n",
    "#use ax2 to plot boys\n",
    "uganda16[uganda16['Sex']=='Male'].groupby('Location').mean().plot(kind = 'bar', ax = ax2).legend(bbox_to_anchor=(1, 0.5))\n",
    "ax2.set_title(\"Male\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, lets plot the average OOSC by wealth and gender, using the same method.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Male')"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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sveVfmmpgd1VhyI+twUuDQUFACAk9uw/nND4LLIXNi80xUlJSUlqWVlZ52XLloX0UcDz58/vff/99x+62BTa/fr1G1JWVratb9+WZ/1s69rUPRQAAESLxYsXp508eZL30SAOBACgTXviiSd6DBkyJD8vL2/wLbfckh0IBPTYY4+l5uTkFA4ZMiS/tLT0/BM+p02blrN06dLu9cvJyclXSHXP3LjnnnsyBg4cWJCbmzt4yZIl3SVp1apVKePHjx9Q3/62227LKikpSV2wYEHvAwcOdLjqqqtyR44cmduafv7gBz9IGzhwYMHAgQML5s+f31uS/vEf/zFtwYIFvSVpxowZmaNGjcqVpJUrV6ZMmTKlfyAQ0LRp03Lq+zVv3rzekrRly5bEsWPHDiwoKMgfPnz4oHfeeSdJkiorKxOuueaaywcNGjR40KBBg//7v/+7c1N9ef/99zv279+/YNq0aTk5OTmFU6ZM6f/yyy+nDBs2LC87O7vwtdde+9xPWuWSBwCgzdq4cWPSihUrepSVlVUkJia6r3/961mLFi1KfeSRR9I3bNiwrUePHjV/9Vd/Najh8zyasmzZsm6bN2/utG3bti379u1LKC4uzv/yl798srn2c+bMObBo0aK0NWvWbG/N5Yw33ngjefny5akbNmzY5pzT8OHD8ydOnHhi3LhxJ3/605+mSTrw7rvvJldXV8edPXvW1qxZ02Xs2LEn3nzzzeR9+/Z1+OCDD7ZI0qFDh+IlaebMmdlPPfXUziFDhpz905/+1Pkb3/hG1ltvvbX93nvvzRo7duyJuXPnfhgIBHTs2LH45vpUWVmZ9Nxzz300fPjwT4YOHZr/29/+NrWsrKxi+fLl3R5++OG+48eP/7ClvBqioEDUycnoq517qvzuBoA24JVXXkkpLy9PLioqypekTz/9NK6srKzLqFGjTqSnpwckaerUqUe2b9+edLH9vPHGGyk33njjkYSEBGVmZgZGjhx5cu3atcmXXXZZs/dHfB6vv/56l6985St/6dq1a60kffWrXz362muvpTz44IMHp0+f3vnIkSNxiYmJbujQoSffeOON5DfffDPl8ccf35WVlXWusrIycfr06ZnXXnvtseuvv/74sWPH4t55550uN9xww+X1+6+urjZJKi0tTVmxYsXHkpSQkKDU1NRmZ87s16/f2eLi4jOSlJube2bChAnH4+LiNGzYsNMLFixI/7w5UlAg6vD1YACt5ZyzG2644fDChQv31K975plnur344ovdmmqfkJDgamrq3mNramp07ty5i05o1KFDB1db+1lNcfbs2ZBOgJSYmOgyMzPPPvHEEz2Li4tPFhUVnfnDH/6QsnPnzsQrrrji07i4OJWXl2996aWXuj755JO9nnvuuR6LFy/elZKSEvA6W2bHjh3PP4UuLi5OSUlJTpLi4+NVU1PzufPkHgrAZ0zYhvaiX1pqwOYdV6h++qWltngpYdKkScdXrVrVfc+ePQmStH///viRI0eefvvtt1Oqqqriz549ay+99NL5eyays7OrN2zYkCxJy5cv7xYIBEySrrzyyhMrVqzoEQgEtHfv3oR169Z1GTt27KnLL7/87I4dOzqdOXPGDh06FL927drzn3Y6d+5cc+zYsVa9j44fP/7k6tWru504cSLu+PHjcatXr+4+fvz4E5I0evTokwsXLkwbN27ciauvvvrEr3/9616DBw8+HRcXp3379iXU1NTo9ttv/8s//dM/7dm8eXNyjx49ajMyMqp/9atfdZfq7v948803O0nSmDFjTjz66KO9JCkQCOjw4cPNXvIINc5QAD7jjAzaCz/mjBg+fPinc+bM2TNx4sTc2tpadejQwZWUlOyaPXv23lGjRuWnpKTUNLx/4r777js4efLkAYMGDRo8YcKEY506daqVpFtvvfUvpaWlXfLz8wvMzM2bN293VlZWQJKuvfbao3l5eQUZGRlnCwoKzu9r+vTphyZNmpSblpZW/fbbb2+/WD//+q//+vQtt9xyeNiwYfnBeAfHjBlzRpKuuuqqEyUlJX0mTJhwqmvXrrWJiYluzJgxJyXpk08+6TBjxoyc2tpak6T58+fvlqRnn332o7vuuiv7xz/+cd9AIGDXX3/9kdGjR59ZtGjRrttvvz07Nze3Z1xcnH7xi1/svPrqq0+F9qg3zZxzLbcKgxEjRriysrLP9Tdm1uQLb+HThResK7+9XOHOy8x8ietn7EjFDcW/s5ltcM6NCGnHWunzju3W5iu1r3/naInrZ+xLievn2G5s06ZNnxQVFR3yux+InE2bNvUsKirKaWoblzwAAIBnXPIAAMCjoUOH5lVXV1/wIX3ZsmUf13+Lwi9VVVXx48aNG9R4/euvv/5+nz59mv0GyKWgoAAAwKP33nuvwu8+NKVPnz41Xr8N0lpc8gAAAJ5RUAAAAM8oKAAAgGfcQwEACIlefXsVHao6FLL3lZ59egYO7jsY8bktcGkoKAAAIXGo6lBCU/OnXKry28tD8h5VUlKSWlZW1nnZsmW7QrG/evPnz+99//33H0pJSQnJ8z7aOi55AABwCRYvXpx28uRJ3keDOBAAgDbtiSee6DFkyJD8vLy8wbfcckt2IBDQY489lpqTk1M4ZMiQ/NLS0i71badNm5azdOnS88/2SE5OvkKqex7GPffckzFw4MCC3NzcwUuWLOkuSatWrUoZP378gPr2t912W1ZJSUnqggULeh84cKDDVVddlTty5Mjc5vpWv39JWrp0afdp06bl1PfjlltuySosLMzPyckpfPbZZy+TpLKysqT6XHJzcwdv3rw5sbkcJWnFihVdBw8enD9o0KDBo0ePbrYfDzzwQPrUqVNzhg8fPig9PX3Ir3/962733ntvRm5u7uCxY8cODMVDzygoAABt1saNG5NWrFjRo6ysrKKiomJrXFycW7RoUeojjzySXlpaWrF+/fqK7du3d2ppP8uWLeu2efPmTtu2bdvyxz/+cfvcuXMzdu7c2aG59nPmzDnQu3fvc2vWrNne0nM8mlNZWZm4adOmbb///e8/+M53vpN9+vRpe/zxx3t985vf3F9RUbH1vffe29a/f//qpnJ88sknU/fu3Zswa9asnBdffPHD999/f+vLL7/84cXi7dy5M7G0tHT7Cy+8sOPee+/tP2HChOPbt2/fmpSUVPv8889fdik5NMQ9FK2Qk9FXO/dU+d0NAEAjr7zySkp5eXlyUVFRviR9+umncWVlZV1GjRp1Ij09PSBJU6dOPbJ9+/aki+3njTfeSLnxxhuPJCQkKDMzMzBy5MiTa9euTb7sssvCdn/EtGnTjsTHx2vIkCFnMzMzz7777rtJo0ePPvXTn/607+7duzvedNNNR4cMGXK2qRx79+4deP311zsXFxefyMvLq5aktLS0i858efXVVx9LTEx0xcXFZ2pqauxrX/vacUkqKCg48/HHH3f0mg8FRSvwNEgAiE7OObvhhhsOL1y4cE/9umeeeabbiy++2K2p9gkJCa6mpu59t6amRufOnbvoqf4OHTq42trPaorPe2nA7LPmZ86csea21S/fe++9R8aOHXvqpZdeumzy5MkDH3/88Z1N5ShJ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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## plotting  two subplots ax1 and ax2\n",
    "fig, (ax1,ax2) = plots.subplots(nrows = 1, ncols = 2,sharex = True, sharey = True)\n",
    "#use ax1 to plot girls\n",
    "uganda16[uganda16['Sex']=='Female'].groupby('Wealth').mean().plot(kind = 'bar', ax = ax1, legend = False)\n",
    "ax1.set_title(\"Female\")\n",
    "#use ax2 to plot boys\n",
    "uganda16[uganda16['Sex']=='Male'].groupby('Wealth').mean().plot(kind = 'bar', ax = ax2).legend(bbox_to_anchor=(1.2, 0.5))\n",
    "ax2.set_title(\"Male\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now lets reorganizing the above OOSC plot by gender and wealth."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Quintile 5')"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## plotting  two subplots ax1 ... ax5\n",
    "fig, (ax1,ax2,ax3,ax4,ax5) = plots.subplots(nrows = 1, ncols = 5 ,sharex = True, sharey = True)\n",
    "#use each ax to plot a quintile\n",
    "uganda16[uganda16['Wealth']=='Quintile 1'].groupby('Sex').mean().plot(kind = 'bar', ax = ax1, legend = False)\n",
    "ax1.set_title(\"Quintile 1\")\n",
    "uganda16[uganda16['Wealth']=='Quintile 2'].groupby('Sex').mean().plot(kind = 'bar', ax = ax2, legend = False)\n",
    "ax2.set_title(\"Quintile 2\")\n",
    "uganda16[uganda16['Wealth']=='Quintile 3'].groupby('Sex').mean().plot(kind = 'bar', ax = ax3, legend = False)\n",
    "ax3.set_title(\"Quintile 3\")\n",
    "uganda16[uganda16['Wealth']=='Quintile 4'].groupby('Sex').mean().plot(kind = 'bar', ax = ax4, legend = False)\n",
    "ax4.set_title(\"Quintile 4\")\n",
    "uganda16[uganda16['Wealth']=='Quintile 5'].groupby('Sex').mean().plot(kind = 'bar', ax = ax5).legend(bbox_to_anchor=(1.2, 0.5))\n",
    "ax5.set_title(\"Quintile 5\")\n",
    "#remove overlaps\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on the above visualizations, we can see that the out of school children rate does not look so different between rural and urban locations, when gender and wealth are not taking into consideration.\n",
    "\n",
    "When looking at difference in gender and locations, we can see that within each gender, the OOSC for rural and urban still looks similiar, especially at the lower and upper secondary levels. For female students, the OOSC rate at primary level is lower than male students, regardless of location. But the OOSC rate at lower and upper secondary levels are higher for female, regard less of location. \n",
    "\n",
    "When looking at difference in gender and wealth, we can see that the OOSC rate is lower for male at the upper secondary level, regardless of wealth. However, the OOSC rate is lower for girls for the primary level, for all wealth quintiles except for quintile 1. When we compare the OOSC rate for the two extrames in terms of wealth, we can see that there is a large OOSC rate gap between girls who are in Quintile 1 and Quintile 5, at the primary and upper secondary level. The largest gender gap of OOSC rate occurs for students in Quintile 1 and Quintile 2, at the upper secondary level. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <font color = #254117>Good Job! You have successfully completed this tutorial, now is time to try these methods on your own and complete the Notebook assignment </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## <font color = #254117>Feedback</font>\n",
    "Thank you so much for completeing the notebook! The development team would appreciate your feedback to get a sense of how the notebook experience was! All feedback is confidential and will be used to guide future developers in creating a notebook. We hope you learned a lot from this experience feel free to reach out to your GSI at (yidan.zhang@berkeley.edu) if you have any questions about the development or use of this notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
